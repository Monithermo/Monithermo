							MoniThermo One


Introduction :
--------------

<p>	Ce projet a pour but de créer un capteur de température connecté. Nous avons choisi l'arduino Yún pour ces deux caractéristiques principales.

Premièrement, il posséde une puce WiFi ainsi qu'un port ethernet ; deuxièmement, il embarque un linux qui communique avec le microcontrôleur à l'aide de

la bibliothèque "bridge". 

	De ce fait le programme est incompatible avec les autres cartes Arduino.

	Néanmoins les librairies utilisées pour stocker l'identifiant en EEPROM, créer un port logiciel de débugage, ainsi que celles-utilisées pour contrôler le

capteur sont fonctionnelles sur toutes les cartes.

</p>


Côté logiciel : 
---------------

	Ce projet contient, un programme devant être téléversé sur le Yún avec l'IDE Arduino nommé " Monithermo_One.ino " , ainsi qu'un programme devant être placé

dans le dossier " /usr/lib/python/bridge/ " nommé " post_temp.py " . Cependant, ce dernier ne fonctionnera pas si aucune adresse de post n'est spécifiée.

	Le programme permettant de stocker l'identifiant du capteur dans l'EEPROM interne du micro-contrôleur se situe à l'adresse suivante : 

		" https://github.com/previmeteo/gprs-davis-datalogger/tree/master/firmware/atmega328/station_id_rec_in_eeprom "

	Pour ce qui est des librairies, elles devront être placées dans le dossier " librairies " de votre IDE.

	Liste des librairies utilisée : 
	
		- SoftwareSerial, (renommée " Newsoftserial " -> http://arduiniana.org/libraries/newsoftserial/ )

		- OneWire, (natif sur l'IDE Arduino)

		- DallasTemperature ( https://github.com/milesburton/Arduino-Temperature-Control-Library )

		- EEPROM, (natif sur l'IDE Arduino)

Remarques : 
-----------

	- Si vous programmez le Yún par connexion WiFi, l'identifiant stocké en EEPROM sera effacé.

	- Si vous renommé le programme " post_temp.py ", il faudra également le changer dans la fonction " PostTemp() " du programme " Monithermo_One.ino "
	
	- IDE testé : Arduino 1.5.5-r2



Caractéristiques hardware : 
---------------------------

La sonde DS18B20 est prévue pour être connectée comme ceci : 

	pin 10 -> Data (jaune)

	pin 11 -> Power (rouge)

	GND -> GND (bleu)

Le temps écoulé entre deux prises de températures peux être réglé dans le programme (variable globale " temps ", il est défini à 5 minutes dans l'exemple.

Le port de débugage est situé sur la broche 3.
